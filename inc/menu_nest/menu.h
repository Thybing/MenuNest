/**
 * ************************************************************************
 * @file menu.h
 * @author Thybing (yanbinghao86@gmail.com)
 * @brief 菜单对象
 * @details  采用静态变量的懒汉单例模式
 * @version 1.0.0
 * @date 2024-8-14
 * ************************************************************************
 */
#ifndef _MENU_NEST_MENU_H_
#define _MENU_NEST_MENU_H_
#include "menu_nest/page.h"

/**
 * ************************************************************************
 * @brief 菜单模块
 * 
 * @warning  请在使用前进行初始化，禁止私自创建，请采用get函数获取唯一对象
 * ************************************************************************
 */
typedef struct MN_menu{
    /// @brief 菜单主页面指针
    MN_page * mp_main_page;

    /// @brief 菜单历史页面栈
    MN_page ** mpp_history_page_stack;
    /// @brief 菜单历史页面栈顶下标(仅有主页面时为0)
    uint32_t m_history_top_index;
    /// @brief 菜单交互模块
    MN_interaction * mp_interaction;

    /// @brief 菜单输入队列
    input_t * mp_input_queue;
    /// @brief 菜单输入队列头
    uint32_t input_queue_head;
    /// @brief 菜单输入队列尾
    uint32_t input_queue_tail;

}MN_menu;

/**
 * ************************************************************************
 * @brief 初始化菜单对象
 * 
 * @param[in] p_main_page 菜单主页
 * ************************************************************************
 */
void MN_menu_init(MN_page * p_main_page);

/**
 * ************************************************************************
 * @brief 单例模式下获取菜单对象
 * 
 * @return 获取的菜单对象
 * ************************************************************************
 */
MN_menu * MN_get_menu();

/**
 * ************************************************************************
 * @brief 获取菜单的Main页面指针
 * 
 * @return 菜单的Main页面指针
 * ************************************************************************
 */
MN_page * MN_get_main_page();

/**
 * ************************************************************************
 * @brief 获取菜单的当前页面指针
 * 
 * @return 菜单的当前页面指针
 * ************************************************************************
 */
MN_page * MN_get_cur_page();

/**
 * ************************************************************************
 * @brief 跳转至目标页面
 * 
 * @param[in] p_target_page  要跳转的目标页面指针
 * 
 * ************************************************************************
 */
void MN_menu_page_forward(MN_page * const p_target_page);

/**
 * ************************************************************************
 * @brief 通过页面标题跳转至目标页面
 * 
 * @param[in] title  要跳转的目标页面的标题
 * 
 * ************************************************************************
 */
void MN_menu_page_title_forward(const char * const title);

/**
 * ************************************************************************
 * @brief 回退历史页面
 * 
 * ************************************************************************
 */
void MN_menu_page_retreat();

/**
 * ************************************************************************
 * @brief 为菜单设置交互回调函数
 * 
 * @param[in] callback  交互回调函数
 * 
 * ************************************************************************
 */
void MN_menu_set_handle_callback(const interaction_callback_t callback);

/**
 * ************************************************************************
 * @brief 显示/渲染菜单当前页面
 * 
 * ************************************************************************
 */
void MN_menu_rendering();

/**
 * ************************************************************************
 * @brief 向菜单的输入队列中添加消息
 * 
 * @param[in] input  菜单输入
 * 
 * ************************************************************************
 */
void MN_menu_input(const input_t input);

/**
 * ************************************************************************
 * @brief 处理输入队列中的消息
 * @details 将队列中的消息取出，依次输入到当前item，当前页面，menu的输入模块中。如果在某个输入模块被捕获，则不会输入到后面的输入模块
 * 
 * ************************************************************************
 */
void MN_menu_handle_input_queue();

#endif //_MENU_NEST_MENU_H_
